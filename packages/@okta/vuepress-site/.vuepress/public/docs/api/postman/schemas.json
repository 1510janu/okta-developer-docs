{
	"info": {
		"_postman_id": "bf297346-7e18-4b66-a665-4c9c5ea69e1f",
		"name": "Schemas (Okta API)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Get User Schema",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/meta/schemas/user/default",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"meta",
								"schemas",
								"user",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Property to User Profile Schema",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"definitions\": {\n    \"custom\": {\n      \"id\": \"#custom\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"twitterUserName\": {\n          \"title\": \"Twitter username\",\n          \"description\": \"User's username for twitter.com\",\n          \"type\": \"string\",\n          \"required\": false,\n          \"minLength\": 1,\n          \"maxLength\": 20,\n          \"permissions\": [\n            {\n              \"principal\": \"SELF\",\n              \"action\": \"READ_WRITE\"\n            }\n          ]\n        }\n      },\n      \"required\": []\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/meta/schemas/user/default",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"meta",
								"schemas",
								"user",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile Schema Property",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"definitions\": {\n    \"custom\": {\n      \"id\": \"#custom\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"twitterUserName\": {\n          \"title\": \"Twitter username\",\n          \"description\": \"User's username for twitter.com\",\n          \"type\": \"string\",\n          \"required\": false,\n          \"minLength\": 1,\n          \"maxLength\": 10,\n          \"permissions\": [\n            {\n              \"principal\": \"SELF\",\n              \"action\": \"READ_ONLY\"\n            }\n          ]\n        }\n      },\n      \"required\": []\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/meta/schemas/user/default",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"meta",
								"schemas",
								"user",
								"default"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Property from User Profile Schema",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"definitions\": {\n        \"custom\": {\n            \"id\": \"#custom\",\n            \"type\": \"object\",\n            \"properties\": {\n                \"twitterUserName\": null\n            }\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/meta/schemas/user/default",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"meta",
								"schemas",
								"user",
								"default"
							]
						}
					},
					"response": []
				}
			]
		},
    {
      "id": "b6f7d39c-d2eb-472e-8442-11814f03cf4b",
      "name": "Log Stream Schema",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [

        {
          "id": "4f80975d-474b-40a9-ad92-a64302ca5e92",
          "name": "Get Log Stream schema for a Log Stream type",
          "request": {
            "name": "Get Log Stream schema for a Log Stream type",
            "description": {},
            "url": {
              "path": [
                "api",
                "v1",
                "meta",
                "schemas",
                "logStream",
                ":type"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "disabled": false,
                  "type": "any",
                  "value": "<string>",
                  "key": "type",
                  "description": "(Required) "
                }
              ]
            },
            "method": "GET",
            "auth": null
          },
          "response": [
            {
              "id": "ee3caf4d-8ee2-4527-8edd-41a56521549f",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "meta",
                    "schemas",
                    "logStream",
                    ":type"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "type",
                      "description": "(Required) "
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"title\": \"AWS EventBridge\",\n \"description\": \"Configuration for Log Streaming integration with AWS EventBridge\",\n \"type\": \"object\",\n \"properties\": {\n  \"name\": {\n   \"title\": \"Name\",\n   \"description\": \"A name for this integration instance in Okta\",\n   \"type\": \"string\"\n  },\n  \"settings\": {\n   \"type\": \"object\",\n   \"description\": \"Configuration properties specific to AWS EventBridge\",\n   \"properties\": {\n    \"awsAccountId\": {\n     \"title\": \"AWS account ID\",\n     \"description\": \"The ID for your AWS account\",\n     \"type\": \"string\",\n     \"readOnly\": true,\n     \"pattern\": \"^[0-9]*$\"\n    },\n    \"awsEventSourceName\": {\n     \"title\": \"AWS Event Source Name\",\n     \"description\": \"An alphanumeric name to identify this event source in AWS EventBridge. This name cannot have spaces.\",\n     \"type\": \"string\",\n     \"readOnly\": true,\n     \"maxLength\": 75,\n     \"pattern\": \"^[A-Za-z0-9]{1,75}$\"\n    },\n    \"awsRegion\": {\n     \"title\": \"AWS Region\",\n     \"description\": \"The destination AWS region for your system log events. Only one region can be selected.\",\n     \"type\": \"string\",\n     \"readOnly\": true,\n     \"oneOf\": [\n      {\n       \"const\": \"us-west-2\",\n       \"title\": \"US West 2 (Oregon)\"\n      },\n      {\n       \"const\": \"us-east-1\",\n       \"title\": \"US East 1 (Virginia)\"\n      }\n     ]\n    }\n   },\n   \"required\": [\n    \"awsAccountId\",\n    \"awsEventSourceName\",\n    \"awsRegion\"\n   ]\n  },\n  \"required\": [\n   \"name\",\n   \"settings\"\n  ]\n }\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "9a7a9ac2-310a-47e2-8357-e35a350a9964",
              "name": "Unauthorized",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "meta",
                    "schemas",
                    "logStream",
                    ":type"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "type",
                      "description": "(Required) "
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"errorCode\": \"E0000015\",\n \"errorSummary\": \"You do not have permission to access the feature you are requesting\",\n \"errorLink\": \"E0000015\",\n \"errorId\": \"oaeUokjuXnQQW6uFMrwvPb17w\",\n \"errorCauses\": []\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            },
            {
              "id": "a446aa05-4104-4998-a942-183cd194fc56",
              "name": "Not Found",
              "originalRequest": {
                "url": {
                  "path": [
                    "api",
                    "v1",
                    "meta",
                    "schemas",
                    "logStream",
                    ":type"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "disabled": false,
                      "type": "any",
                      "value": "<string>",
                      "key": "type",
                      "description": "(Required) "
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"errorCode\": \"E0000007\",\n \"errorSummary\": \"Not found: {0}\",\n \"errorLink\": \"E0000007\",\n \"errorId\": \"sampleMlLvGUj_YD5v16vkYWY\",\n \"errorCauses\": []\n}",
              "cookie": [],
              "_postman_previewlanguage": "json"
            }
          ],
          "event": []
        }
      ],
      "event": []
    }
  ]
}
