version: 2.1

parameters:
  preview:
    type: string
    default: ""

jobs:
  node_build_checks:
      docker:
        - image: cimg/node:14.21.3-browsers
      resource_class: xlarge
      environment:
        NODE_OPTIONS: '--max_old_space_size=3584'
      steps:
        - checkout
        # - run:
        #     name: Install dependencies
        #     command: yarn install --frozen-lockfile
        # - run:
        #     name: Build 
        #     command: yarn build
        # - run:
        #     name: Run checks
        #     command: ./scripts/yarn-checks-ci.sh
        # - run:
        #     name: Run script and capture logs
        #     command: yarn build
        # - run:
        #     name: Run link checker
        #     command: yarn broken-link-checker:external > output.txt 2>&1 || true
        # - run:
        #     name: Extract URLs from log
        #     command: |
        #       grep -o 'Link: https\?://[^[:space:]]*' output.txt | sed 's/Link: //' > urls.txt
        #     when: always
        # - run:
        #     name: Remove False Positives
        #     command: |
        #       comm -23 <(sort urls.txt | uniq) <(sort falsepos.txt | uniq) > broken_external_urls.txt
        # - run:
        #     name: Print urls to log
        #     command: |
        #       cat broken_external_urls.txt
        - run:
            name: Send failure email if broken URLs found
            when: on_success
            command: |
              chmod +x ./scripts/send-nightly-email.sh
              ./scripts/send-nightly-email.sh

  nightly_link_checker:
    docker:
      - image: cimg/node:14.21.3-browsers
    resource_class: xlarge
    environment:
      NODE_OPTIONS: '--max_old_space_size=3584'
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Run script and capture logs
          command: yarn build
      - run:
          name: Run link checker
          command: yarn broken-link-checker:external > output.txt 2>&1 || true
      - run:
          name: Extract URLs from log
          command: |
            grep -o 'Link: https\?://[^[:space:]]*' output.txt | sed 's/Link: //' > urls.txt
          when: always
      - run:
          name: Remove False Positives
          command: |
            comm -23 <(sort urls.txt | uniq) <(sort falsepos.txt | uniq) > broken_external_urls.txt
      - run:
          name: Print urls to log
          command: |
            cat broken_external_urls.txt
      - run:
          name: Send failure email if broken URLs found
          when: on_success
          command: |
            chmod +x ./scripts/send-nightly-email.sh
            ./scripts/send-nightly-email.sh
  
  netlify_manual:
    docker:
      - image: cimg/node:14.21.3-browsers
    resource_class: xlarge
    steps:
      - run:
          name: Has secrets?
          command: |
            if [ -z "$NETLIFY_AUTH_TOKEN" ] || [ -z "$NETLIFY_SITE_ID" ]; then
              echo "Missing required secrets."
              exit 1
            fi
      - checkout
      - run:
          name: Install dependencies
          command: |
            yarn install --frozen-lockfile
      - run:
          name: Build preview
          command: |
            yarn build
      - run:
          name: Install Netlify CLI
          command: |
            npm install netlify-cli -g
      - run:
          name: Deploy preview to Netlify
          command: |
            netlify deploy --filter @okta/vuepress-site

orbs:
  general-platform-helpers: okta/general-platform-helpers@1.8

workflows:
  semgrep:
    when:
      not: << pipeline.parameters.preview >>
    jobs:
      - general-platform-helpers/job-semgrep-prepare:
          name: semgrep-prepare
      - general-platform-helpers/job-semgrep-scan:
          name: "Scan with Semgrep"
          requires:
            - semgrep-prepare

  build_checks:
    when:
      not: << pipeline.parameters.preview >>
    jobs:
      - node_build_checks:
          name: "Build and Checks"
  
  nightly:
    triggers:
      - schedule:
          cron: "1 5 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - nightly_link_checker:
          name: "Nightly Link Checker"

  netlify_manual:
    when: << pipeline.parameters.preview >>
    jobs:
      - netlify_manual:
          name: "Netlify Manual"
