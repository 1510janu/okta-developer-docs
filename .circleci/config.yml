version: 2.1

parameters:
  preview:
    type: string
    default: ""

jobs:
  node_build_checks:
      docker:
        - image: cimg/node:14.21.3-browsers
      resource_class: xlarge
      environment:
        NODE_OPTIONS: '--max_old_space_size=3584'
      steps:
        - checkout
        - run:
            name: Install dependencies
            command: yarn install --frozen-lockfile
        - run:
            name: Build 
            command: yarn build
        - run:
            name: Run checks
            command: ./scripts/yarn-checks-ci.sh

  nightly_link_checker:
    docker:
      - image: cimg/node:14.21.3-browsers
    resource_class: xlarge
    environment:
      NODE_OPTIONS: '--max_old_space_size=3584'
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Run script and capture logs
          command: yarn build
      - run:
          name: Run link checker
          command: yarn broken-link-checker:external > output.txt 2>&1 || true
      - run:
          name: Extract URLs from log
          command: |
            grep -o 'Link: https\?://[^[:space:]]*' output.txt | sed 's/Link: //' > urls.txt
          when: always
      - run:
          name: Remove False Positives
          command: |
            comm -23 <(sort urls.txt | uniq) <(sort falsepos.txt | uniq) > broken_external_urls.txt
      - run:
          name: Print urls to log
          command: |
            cat broken_external_urls.txt
  
  netlify_manual:
    docker:
      - image: cimg/node:14.21.3-browsers
    resource_class: xlarge
    steps:
      - run:
          name: Has secrets?
          command: |
            if [ -z "$NETLIFY_AUTH_TOKEN" ] || [ -z "$NETLIFY_SITE_ID" ]; then
              echo "Missing required secrets."
              exit 1
            fi
      - checkout
      - run:
          name: Install dependencies
          command: |
            yarn install --frozen-lockfile
      - run:
          name: Build preview
          command: |
            yarn build
      - run:
          name: Install Netlify CLI
          command: |
            npm install netlify-cli -g
      - run:
          name: Deploy preview to Netlify
          command: |
            netlify deploy --filter @okta/vuepress-site

orbs:
  general-platform-helpers: okta/general-platform-helpers@1.8
  email: cinotify/email@1.2.1

workflows:
  semgrep:
    when:
      not: << pipeline.parameters.preview >>
    jobs:
      - general-platform-helpers/job-semgrep-prepare:
          name: semgrep-prepare
      # - general-platform-helpers/job-semgrep-scan:
      #     name: "Scan with Semgrep"
      #     requires:
      #       - semgrep-prepare
      # Link to the job - <a href="https://app.circleci.com/pipelines/github/okta/okta-developer-docs/$CIRCLE_PIPELINE_ID/workflows/$CIRCLE_WORKFLOW_ID/jobs/$CIRCLE_WORKFLOW_JOB_ID"> Link </a>
      - email/send:
          body: Nightly job ran successfully. << env.CIRCLE_PIPELINE_ID >> Pipelineid - {{env.CIRCLE_PIPELINE_ID}} {{env.CIRCLE_WORKFLOW_ID}} {{env.CIRCLE_WORKFLOW_JOB_ID}} pipeid - {{CIRCLE_PIPELINE_ID}} {{CIRCLE_WORKFLOW_ID}} {{CIRCLE_WORKFLOW_JOB_ID}} pipeid1 - $CIRCLE_PIPELINE_ID $CIRCLE_WORKFLOW_ID $CIRCLE_WORKFLOW_JOB_ID
          subject: Dev Docs Nightly Success
          to: test-circleci-notif-aaaam4adaseamnmgdfiwsb4h3i@okta.org.slack.com

  # build_checks:
  #   when:
  #     not: << pipeline.parameters.preview >>
  #   jobs:
  #     - node_build_checks:
  #         name: "Build and Checks"
  
  # nightly:
  #   triggers:
  #     - schedule:
  #         cron: "1 5 * * *"
  #         filters:
  #           branches:
  #             only:
  #               - master
  #   jobs:
  #     - nightly_link_checker:
  #         name: "Nightly Link Checker"

  # netlify_manual:
  #   when: << pipeline.parameters.preview >>
  #   jobs:
  #     - netlify_manual:
  #         name: "Netlify Manual"
